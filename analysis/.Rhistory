ys[j] <- 14-floor((j-1)/15)
}
heatmap <- data.frame(
X = unlist(xs),
Y = unlist(ys),
Z = unlist(values)
)
#shows a particular heatmap (most common grid)
heatmap |>
mutate(Z = ifelse(Z=='w', 0, 1)) |>
ggplot(aes(X, Y)) +
geom_tile(aes(fill= Z), color="black")+
theme_void()+
scale_fill_gradient(high = "black", low = "white")+
scale_color_identity()
View(clue_answer_frequencies)
data <- read_csv('../crossword_clues.csv')
data <- data |>
mutate(date = as.Date(date, format = "%m-%d-%Y")) |>
mutate(year = format(date, "%Y"))
working <- data |>
filter(answer == 'SRI')
View(working)
data <- read_csv('../crossword_clues.csv')
data <- data |>
mutate(date = as.Date(date, format = "%m-%d-%Y")) |>
mutate(year = format(date, "%Y"))
View(data)
View(data)
clue_length <- data |>
mutate(length = str_length(clue)) |>
filter(!is.na(length)) |>
group_by(day) |>
summarize(
count=n(),
avg_len = mean(length)
)
View(clue_length)
install.packages('koRpus')
koRpus::TTR(data$clue)
?TTR
koRpus::TTR(data$clue, char=FALSE)
install.koRpus.lang("en")
library(koRpus)
install.koRpus.lang("en")
koRpus::TTR(data$clue, char=FALSE)
library(koRpus.lang.en)
koRpus::TTR(data$clue, char=FALSE)
library(koRpus)
koRpus::TTR(data$clue, char=FALSE)
koRpus::TTR(data$clue, char=FALSE)
clue_ttr <- data |>
separate_longer_delim(clue, delim=' ')
clue_ttr <- data |>
separate_longer_delim(clue, delim=' ') |>
group_by(day) |>
summarise( ttr = n_distinct(clue)/ n())
View(clue_ttr)
clue_ttr <- data |>
separate_longer_delim(clue, delim=' ')
View(clue_ttr)
clue_ttr <- data |>
separate_longer_delim(clue, delim=' ')|>
group_by(day) |>
summarise( ttr = n_distinct(clue)/ n())
View(clue_ttr)
clue_ttr <- data |>
separate_longer_delim(clue, delim=' ')|>
group_by(day) |>
summarise( ttr = n_distinct(clue)/ n(), count=n())
View(clue_ttr)
ttr <- data |>
group_by(day, year) |>
summarise( ttr = n_distinct(answer)/ n()) |>
mutate(year = as.numeric(year))
View(ttr)
ttr <- data |>
group_by(day) |>
summarise( ttr = n_distinct(answer)/ n())
View(ttr)
ttr <- data |>
group_by(day) |>
summarise( ttr = n_distinct(answer)/ n(), count=n())
View(ttr)
ttr <- data |>
group_by(day, year) |>
summarise( ttr = n_distinct(answer)/ n()) |>
mutate(year = as.numeric(year))
View(ttr)
ttr <- data |>
group_by(day, year) |>
summarise( ttr = n_distinct(answer)/ n(), count=n()) |>
mutate(year = as.numeric(year))
View(ttr)
clue_ttr <- data |>
separate_longer_delim(clue, delim=' ')|>
group_by(day, year) |>
summarise( ttr = n_distinct(clue)/ n(), count=n()) |>
mutate(year=as.numeric(year))
View(clue_ttr)
clue_ttr |>
filter(year != 1993) |>
filter(year != 2025) |>
ggplot()+
geom_line(aes(x=year, y=ttr, group = day), size=5)+
scale_color_identity()+
theme(panel.background = element_rect(fill="white", color="white"))
clue_ttr |>
filter(year != 1993) |>
filter(year != 2025) |>
ggplot()+
geom_line(aes(x=year, y=ttr, group = day, color=day), size=5)+
scale_color_identity()+
theme(panel.background = element_rect(fill="white", color="white"))
clue_ttr |>
filter(year != 1993) |>
filter(year != 2025) |>
ggplot()+
geom_line(aes(x=year, y=ttr, group = day, color=day), size=5)+
#scale_color_identity()+
theme(panel.background = element_rect(fill="white", color="white"))
clue_ttr <- data |>
separate_longer_delim(clue, delim=' ')|>
group_by(day, year) |>
summarise( ttr = n_distinct(clue)/ n(), count=n()) |>
mutate(year=as.numeric(year)) |>
filter(year != 1993) |>
filter(year != 2025)
View(clue_ttr)
clue_ttr |>
ggplot()+
geom_line(aes(x=year, y=count, group = day, color=day), size=5)+
#scale_color_identity()+
theme(panel.background = element_rect(fill="white", color="white"))
?str_length
str_length('abc')
str_length('abc ')
str_length('abc    ')
View(data)
colors <- data.frame(
day = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun'),
hex = c('#A8D9FF','#AFC8DB','#9CABB6','#687F92','#3E596D','#1F3749','#0E2333')
)
rm(ttr)
rm(clue_ttr)
clue_length <- data |>
mutate(length = str_length(clue)) |>
filter(!is.na(length)) |>
group_by(day, year) |>
summarize(
count=n(),
avg_len = mean(length)
)
clue_length <- data |>
mutate(length = str_length(clue)) |>
filter(!is.na(length)) |>
group_by(day, year) |>
summarize(
count=n(),
avg_len = mean(length)
) |>
mutate(year = as.numeric(year))
View(clue_length)
colors <- data.frame(
day = c('Mon','Tue','Wed','Thu','Fri','Sat','Sun'),
hex = c('#A8D9FF','#AFC8DB','#9CABB6','#687F92','#3E596D','#1F3749','#0E2333')
)
clue_length <- left_join(clue_length, colors, by=join_by('day'=='day'))
View(clue_length)
animation <- clue_length |>
filter(year != 1993) |>
filter(year != 2025) |>
ggplot()+
geom_line(aes(x=year, y=avg_len, group = day, color=hex), size=5)+
scale_color_identity()+
theme(panel.background = element_rect(fill="white", color="white"))+
transition_reveal(year)
animation <- animate(animation, fps=30, duration=2, height=15, width=15, res=100, units="in")
anim_save('images/clue_length.gif',animation)
clue_frequencies <- data |>
group_by(clue) |>
filter(n() > 1) |>
summarize(
count = n(),
ex_answer = first(answer),
unique_answers = n_distinct(answer)
)
View(clue_frequencies)
View(data)
clue_words <- unnest_tokens(data, clue_word, clue) |>
group_by(clue_word) |>
summarize(
count = n(),
most_common_answer = collapse::fmode(answer)
) |>
filter(!clue_word %in% stopwords::stopwords(language="en")) |>
arrange(-count)
View(clue_words)
View(clue_length)
View(clue_length)
working <- clue_length |>
filter(year == 2024)
View(working)
View(data)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(tidytext)
library(gganimate)
setwd("~/GitHub/crosswords/analysis")
data <- read_csv('../crossword_clues.csv')
data <- data |>
mutate(date = as.Date(date, format = "%m-%d-%Y")) |>
mutate(year = format(date, "%Y"))
?contains
?dplyr::contains
quotes <- data |>
filter(clue,contains("\":"))
library(tidyverse)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(tidytext)
library(gganimate)
setwd("~/GitHub/crosswords/analysis")
data <- read_csv('../crossword_clues.csv')
data <- data |>
mutate(date = as.Date(date, format = "%m-%d-%Y")) |>
mutate(year = format(date, "%Y"))
quotes <- data |>
select(clue,contains("\":"))
View(quotes)
quotes <- data |>
select(clue,contains(":"))
quotes <- data |>
select(clue, matches(":"))
quotes <- data |>
filter(grepl('%":', clue))
quotes <- data |>
filter(grepl('%":%', clue))
quotes <- data |>
filter(str_detect(clue,'":'))
View(quotes)
View(quotes)
quotes <- data |>
mutate(speaker = str_extract(clue, "\":.*"))
View(quotes)
quotes <- data |>
filter(str_detect(clue,'":'))
speakers <- data |>
mutate(speaker = str_extract(clue, "\":.*"))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*"))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "[\":].*"))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "[^\":].*"))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "[^\":]+.*"))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "[^\":]+"))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "^\":.*"))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "^.*\":"))
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*"))
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":(.*)"))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "(?\":)(.*)"))
speakers <- quotes |>
mutate(speaker = str_extract(clue, "(?:\":)(.*)"))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":(.*)"))
View(speakers)
quotes <- data |>
filter(str_detect(clue,'":')) |>
filter(!str_detect(clue, "Abbr."))
View(quotes)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":(.*)")[2:])
?substr
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":(.*)")) |>
mutate(speaker = substr(2, 1000))
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":(.*)")) |>
mutate(speaker = substr(clue, 2, 1000))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":(.*)")) |>
mutate(speaker = substr(clue, 2, 4))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*")) |>
mutate(speaker = substr(clue, 2, 4))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*"))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*"))|>
mutate(speaker = substr(speaker, 2, 10000))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*"))|>
mutate(speaker = substr(speaker, 4, 10000))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*"))|>
mutate(speaker = substr(speaker, 3, 10000))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*"))|>
mutate(speaker = trim(substr(speaker, 3, 10000)))
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*"))|>
mutate(speaker = str_trim(substr(speaker, 3, 10000)))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*"))|>
mutate(speaker = str_trim(substr(speaker, 3, 10000))) |>
filter(!str_detect(clue,'"'))
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*"))|>
mutate(speaker = str_trim(substr(speaker, 3, 10000))) |>
filter(!str_detect(speaker,'"'))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*"))|>
mutate(speaker = str_trim(substr(speaker, 3, 10000))) |>
#filter(!str_detect(speaker,'"')) |>
group_by(speaker) |>
tally()
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*"))|>
mutate(speaker = str_trim(substr(speaker, 3, 10000))) |>
#filter(!str_detect(speaker,'"')) |>
group_by(speaker) |>
tally()
View(data)
View(quotes)
View(quotes)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*"))|>
mutate(speaker = str_trim(substr(speaker, 3, 10000)))
View(speakers)
write_csv(speakers, 'speakers_raw.csv')
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*"))|>
mutate(speaker = str_trim(substr(speaker, 3, 10000)))|>
#filter(!str_detect(speaker,'"')) |>
group_by(speaker) |>
tally()
View(speakers)
quotes <- data |>
filter(str_ends(clue,'"')) |>
filter(str_strarts(clue,'"'))
quotes <- data |>
filter(str_ends(clue,'"')) |>
filter(str_starts(clue,'"'))
rm(speakers)
View(quotes)
quotes <- data |>
filter(str_ends(clue,'"')) |>
filter(str_starts(clue,'"')) |>
filter(!str_detect(clue,':"'))
View(quotes)
quotes <- data |>
filter(str_ends(clue,'"')) |>
filter(str_starts(clue,'"')) |>
filter(!str_detect(clue,'":'))
View(quotes)
clue_frequency <- quotes |>
group_by(clue) |>
tally()
answer_frequency <- quotes |>
group_by(answer) |>
tally()
View(clue_frequency)
View(answer_frequency)
onomatopoeia <- data |>
filter(str_ends(clue,']')) |>
filter(str_starts(clue,'['))
onomatopoeia_answer_frequency <- quotes |>
group_by(answer) |>
tally()
onomatopoeia <- data |>
filter(str_ends(clue,']')) |>
filter(str_starts(clue,'['))
onomatopoeia <- data |>
filter(str_ends(clue,'\]')) |>
onomatopoeia <- data |>
filter(str_ends(clue,'\]')) |>
onomatopoeia <- data |>
filter(str_ends(clue,'~]')) |>
filter(str_starts(clue,'~['))
onomatopoeia <- data |>
filter(str_ends(clue,'[]]')) |>
filter(str_starts(clue,'~['))
onomatopoeia <- data |>
filter(str_ends(clue,'[]]')) |>
filter(str_starts(clue,'[[]]'))
onomatopoeia <- data |>
filter(str_ends(clue,'[]]')) |>
filter(str_starts(clue,'[[]'))
onomatopoeia <- data |>
filter(str_ends(clue,'[]]'))
View(onomatopoeia)
onomatopoeia <- data |>
filter(substr(clue, 1, 2) == '[')
substr("[", 1, 2) == '['
onomatopoeia <- data |>
filter(substr(clue, 1, 2) == "[")
View(onomatopoeia)
onomatopoeia <- data |>
filter(substr(clue, 1, 2) == "\\[")
onomatopoeia <- data |>
filter(str_starts(clue, "\\["))
onomatopoeia <- data |>
filter(str_starts(clue, "\\[")) |>
filter(str_ends(clue, "\\]"))
View(onomatopoeia)
onomatopoeia_clue_frequency <- onomatopoeia |>
group_by(clue) |>
tally()
onomatopoeia_answer_frequency <- onomatopoeia |>
group_by(answer) |>
tally()
View(onomatopoeia_clue_frequency)
View(onomatopoeia_answer_frequency)
View(clue_frequency)
View(answer_frequency)
View(onomatopoeia)
View(quotes)
answer_frequency |>
arrange(-n) |>
head(10) |>
ggplot(aes(x=reorder(answer, -n), y=n))+
theme_bw()+
ylim(0,800)+
geom_bar(stat="identity")
answer_frequency |>
arrange(-n) |>
head(10) |>
ggplot(aes(x=reorder(answer, -n), y=n))+
theme_bw()+
ylim(0,250)+
geom_bar(stat="identity")
onomatopoeia_answer_frequency |>
arrange(-n) |>
head(10) |>
ggplot(aes(x=reorder(answer, -n), y=n))+
theme_bw()+
ylim(0,250)+
geom_bar(stat="identity")
onomatopoeia_answer_frequency |>
arrange(-n) |>
head(10) |>
ggplot(aes(x=reorder(answer, -n), y=n))+
theme_bw()+
ylim(0,50)+
geom_bar(stat="identity")
answer_frequency |>
arrange(-n) |>
head(10) |>
ggplot(aes(x=reorder(answer, -n), y=n))+
theme_bw()+
ylim(0,250)+
geom_bar(stat="identity")
answer_frequency |>
arrange(-n) |>
head(10) |>
ggplot(aes(x=reorder(answer, -n), y=n))+
theme_bw()+
ylim(0,300)+
geom_bar(stat="identity")
View(answer_frequency)
answer_frequency |>
arrange(-n) |>
head(10) |>
ggplot(aes(x=reorder(answer, -n), y=n))+
theme_bw()+
ylim(0,250)+
geom_bar(stat="identity")
onomatopoeia_answer_frequency |>
arrange(-n) |>
head(10) |>
ggplot(aes(x=reorder(answer, -n), y=n))+
theme_bw()+
ylim(0,50)+
geom_bar(stat="identity")
onomatopoeia_answer_frequency |>
arrange(-n) |>
head(10) |>
ggplot(aes(x=reorder(answer, -n), y=n))+
theme_bw()+
ylim(0,40)+
geom_bar(stat="identity")
