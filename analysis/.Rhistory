mutate(speaker = str_extract(clue, "\":.*"))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*"))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "[\":].*"))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "[^\":].*"))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "[^\":]+.*"))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "[^\":]+"))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "^\":.*"))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "^.*\":"))
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*"))
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":(.*)"))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "(?\":)(.*)"))
speakers <- quotes |>
mutate(speaker = str_extract(clue, "(?:\":)(.*)"))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":(.*)"))
View(speakers)
quotes <- data |>
filter(str_detect(clue,'":')) |>
filter(!str_detect(clue, "Abbr."))
View(quotes)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":(.*)")[2:])
?substr
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":(.*)")) |>
mutate(speaker = substr(2, 1000))
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":(.*)")) |>
mutate(speaker = substr(clue, 2, 1000))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":(.*)")) |>
mutate(speaker = substr(clue, 2, 4))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*")) |>
mutate(speaker = substr(clue, 2, 4))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*"))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*"))|>
mutate(speaker = substr(speaker, 2, 10000))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*"))|>
mutate(speaker = substr(speaker, 4, 10000))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*"))|>
mutate(speaker = substr(speaker, 3, 10000))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*"))|>
mutate(speaker = trim(substr(speaker, 3, 10000)))
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*"))|>
mutate(speaker = str_trim(substr(speaker, 3, 10000)))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*"))|>
mutate(speaker = str_trim(substr(speaker, 3, 10000))) |>
filter(!str_detect(clue,'"'))
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*"))|>
mutate(speaker = str_trim(substr(speaker, 3, 10000))) |>
filter(!str_detect(speaker,'"'))
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*"))|>
mutate(speaker = str_trim(substr(speaker, 3, 10000))) |>
#filter(!str_detect(speaker,'"')) |>
group_by(speaker) |>
tally()
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*"))|>
mutate(speaker = str_trim(substr(speaker, 3, 10000))) |>
#filter(!str_detect(speaker,'"')) |>
group_by(speaker) |>
tally()
View(data)
View(quotes)
View(quotes)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*"))|>
mutate(speaker = str_trim(substr(speaker, 3, 10000)))
View(speakers)
write_csv(speakers, 'speakers_raw.csv')
View(speakers)
speakers <- quotes |>
mutate(speaker = str_extract(clue, "\":.*"))|>
mutate(speaker = str_trim(substr(speaker, 3, 10000)))|>
#filter(!str_detect(speaker,'"')) |>
group_by(speaker) |>
tally()
View(speakers)
quotes <- data |>
filter(str_ends(clue,'"')) |>
filter(str_strarts(clue,'"'))
quotes <- data |>
filter(str_ends(clue,'"')) |>
filter(str_starts(clue,'"'))
rm(speakers)
View(quotes)
quotes <- data |>
filter(str_ends(clue,'"')) |>
filter(str_starts(clue,'"')) |>
filter(!str_detect(clue,':"'))
View(quotes)
quotes <- data |>
filter(str_ends(clue,'"')) |>
filter(str_starts(clue,'"')) |>
filter(!str_detect(clue,'":'))
View(quotes)
clue_frequency <- quotes |>
group_by(clue) |>
tally()
answer_frequency <- quotes |>
group_by(answer) |>
tally()
View(clue_frequency)
View(answer_frequency)
onomatopoeia <- data |>
filter(str_ends(clue,']')) |>
filter(str_starts(clue,'['))
onomatopoeia_answer_frequency <- quotes |>
group_by(answer) |>
tally()
onomatopoeia <- data |>
filter(str_ends(clue,']')) |>
filter(str_starts(clue,'['))
onomatopoeia <- data |>
filter(str_ends(clue,'\]')) |>
onomatopoeia <- data |>
filter(str_ends(clue,'\]')) |>
onomatopoeia <- data |>
filter(str_ends(clue,'~]')) |>
filter(str_starts(clue,'~['))
onomatopoeia <- data |>
filter(str_ends(clue,'[]]')) |>
filter(str_starts(clue,'~['))
onomatopoeia <- data |>
filter(str_ends(clue,'[]]')) |>
filter(str_starts(clue,'[[]]'))
onomatopoeia <- data |>
filter(str_ends(clue,'[]]')) |>
filter(str_starts(clue,'[[]'))
onomatopoeia <- data |>
filter(str_ends(clue,'[]]'))
View(onomatopoeia)
onomatopoeia <- data |>
filter(substr(clue, 1, 2) == '[')
substr("[", 1, 2) == '['
onomatopoeia <- data |>
filter(substr(clue, 1, 2) == "[")
View(onomatopoeia)
onomatopoeia <- data |>
filter(substr(clue, 1, 2) == "\\[")
onomatopoeia <- data |>
filter(str_starts(clue, "\\["))
onomatopoeia <- data |>
filter(str_starts(clue, "\\[")) |>
filter(str_ends(clue, "\\]"))
View(onomatopoeia)
onomatopoeia_clue_frequency <- onomatopoeia |>
group_by(clue) |>
tally()
onomatopoeia_answer_frequency <- onomatopoeia |>
group_by(answer) |>
tally()
View(onomatopoeia_clue_frequency)
View(onomatopoeia_answer_frequency)
View(clue_frequency)
View(answer_frequency)
View(onomatopoeia)
View(quotes)
answer_frequency |>
arrange(-n) |>
head(10) |>
ggplot(aes(x=reorder(answer, -n), y=n))+
theme_bw()+
ylim(0,800)+
geom_bar(stat="identity")
answer_frequency |>
arrange(-n) |>
head(10) |>
ggplot(aes(x=reorder(answer, -n), y=n))+
theme_bw()+
ylim(0,250)+
geom_bar(stat="identity")
onomatopoeia_answer_frequency |>
arrange(-n) |>
head(10) |>
ggplot(aes(x=reorder(answer, -n), y=n))+
theme_bw()+
ylim(0,250)+
geom_bar(stat="identity")
onomatopoeia_answer_frequency |>
arrange(-n) |>
head(10) |>
ggplot(aes(x=reorder(answer, -n), y=n))+
theme_bw()+
ylim(0,50)+
geom_bar(stat="identity")
answer_frequency |>
arrange(-n) |>
head(10) |>
ggplot(aes(x=reorder(answer, -n), y=n))+
theme_bw()+
ylim(0,250)+
geom_bar(stat="identity")
answer_frequency |>
arrange(-n) |>
head(10) |>
ggplot(aes(x=reorder(answer, -n), y=n))+
theme_bw()+
ylim(0,300)+
geom_bar(stat="identity")
View(answer_frequency)
answer_frequency |>
arrange(-n) |>
head(10) |>
ggplot(aes(x=reorder(answer, -n), y=n))+
theme_bw()+
ylim(0,250)+
geom_bar(stat="identity")
onomatopoeia_answer_frequency |>
arrange(-n) |>
head(10) |>
ggplot(aes(x=reorder(answer, -n), y=n))+
theme_bw()+
ylim(0,50)+
geom_bar(stat="identity")
onomatopoeia_answer_frequency |>
arrange(-n) |>
head(10) |>
ggplot(aes(x=reorder(answer, -n), y=n))+
theme_bw()+
ylim(0,40)+
geom_bar(stat="identity")
library(tidyverse)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(tidytext)
library(gganimate)
setwd("~/GitHub/crosswords/analysis")
data <- read_csv('../crossword_clues.csv')
data <- data |>
mutate(date = as.Date(date, format = "%m-%d-%Y")) |>
mutate(year = format(date, "%Y"))
quotes <- data |>
filter(str_ends(clue,'"')) |>
filter(str_starts(clue,'"')) |>
filter(!str_detect(clue,'":'))
clue_frequency <- quotes |>
group_by(clue) |>
tally()
answer_frequency <- quotes |>
group_by(answer) |>
tally()
View(clue_frequency)
View(quotes)
answer_frequency |>
arrange(-n) |>
head(10) |>
ggplot(aes(x=reorder(answer, -n), y=n))+
theme_bw()+
ylim(0,250)+
geom_bar(stat="identity")
quotes <- data |>
filter(str_ends(clue,'"')) |>
filter(str_starts(clue,'"')) |>
filter(!str_detect(clue,'":')) |>
filter(!str_detect(clue, "_"))
View(quotes)
clue_frequency <- quotes |>
group_by(clue) |>
tally()
answer_frequency <- quotes |>
group_by(answer) |>
tally()
answer_frequency |>
arrange(-n) |>
head(10) |>
ggplot(aes(x=reorder(answer, -n), y=n))+
theme_bw()+
ylim(0,250)+
geom_bar(stat="identity")
onomatopoeia <- data |>
filter(str_starts(clue, "\\[")) |>
filter(str_ends(clue, "\\]"))
onomatopoeia_clue_frequency <- onomatopoeia |>
group_by(clue) |>
tally()
onomatopoeia_answer_frequency <- onomatopoeia |>
group_by(answer) |>
tally()
View(onomatopoeia_clue_frequency)
View(onomatopoeia_answer_frequency)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(tidytext)
library(gganimate)
setwd("~/GitHub/crosswords/analysis")
data <- read_csv('../crossword_clues.csv')
data <- data |>
mutate(date = as.Date(date, format = "%m-%d-%Y")) |>
mutate(year = format(date, "%Y"))
quotes <- data |>
filter(str_ends(clue,'"')) |>
filter(str_starts(clue,'"')) |>
filter(!str_detect(clue,'":')) |>
filter(!str_detect(clue, "_"))
quotes_clue_frequency <- quotes |>
group_by(clue) |>
tally()
quotes_answer_frequency <- quotes |>
group_by(answer) |>
tally()
quotes_answer_frequency |>
arrange(-n) |>
head(10) |>
ggplot(aes(x=reorder(answer, -n), y=n))+
theme_bw()+
ylim(0,250)+
geom_bar(stat="identity")
brackets <- data |>
filter(str_starts(clue, "\\[")) |>
filter(str_ends(clue, "\\]"))
brackets_clue_frequency <- onomatopoeia |>
group_by(clue) |>
tally()
View(quotes_clue_frequency)
View(brackets)
brackets <- data |>
filter(str_starts(clue, "\\[")) |>
filter(str_ends(clue, "\\]"))
brackets_clue_frequency <- brackets |>
group_by(clue) |>
tally()
brackets_answer_frequency <- brackets |>
group_by(answer) |>
tally()
View(brackets_answer_frequency)
View(brackets_clue_frequency)
View(quotes)
View(brackets)
View(quotes)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(tidytext)
library(gganimate)
setwd("~/GitHub/crosswords/analysis")
data <- read_csv('../crossword_clues.csv')
data <- data |>
mutate(date = as.Date(date, format = "%m-%d-%Y")) |>
mutate(year = format(date, "%Y"))
working <- data |>
filter(answer == 'SERENA') |>
group_by(year) |>
tally()
View(working)
working <- data |>
filter(answer == 'NAOMI') |>
group_by(year) |>
tally()
View(working)
ggplot(working)+
geom_line(aes(x=year, y=count))
ggplot(working)+
geom_line(aes(x=year, y=n))
ggplot(working)+
geom_bar(aes(x=year, y=n))
ggplot(working)+
geom_line(aes(x=year, y=n))
working |> ggplot()+
geom_line(aes(x=year, y=n))
working |> ggplot()+
geom_point(aes(x=year, y=n))
working <- data |>
filter(answer == 'ZOE') |>
group_by(year) |>
tally()
working |> ggplot()+
geom_point(aes(x=year, y=n))
working <- data |>
filter(answer == 'MAE') |>
group_by(year) |>
tally()
working |> ggplot()+
geom_point(aes(x=year, y=n))
View(working)
working <- data |>
filter(answer == 'ADELE') |>
group_by(year) |>
tally()
working |> ggplot()+
geom_point(aes(x=year, y=n))
working <- data |>
filter(answer == 'ADELE') |>
group_by(year) |>
tally()
working |> ggplot()+
geom_point(aes(x=year, y=n))
working <- data |>
filter(answer == 'ADELE')
View(working)
adele <- data |>
filter(answer == 'ADELE')|>
group_by(year) |>
tally()
adele |> ggplot()+
geom_point(aes(x=year, y=n))
working <- data |>
filter(answer == 'ADELE')
View(working)
write_csv(working, 'adele.csv')
adele |> ggplot()+
geom_bar(aes(x=year, y=n))
adele |> ggplot()+
geom_bar(aes(x=year, y=n))+
geom_bar(stat="identity")
View(adele)
adele |>
mutate(year = as.numeric(year)) |>
ggplot()+
geom_bar(aes(x=year, y=n))+
geom_bar(stat="identity")
adele |>
mutate(year = as.numeric(year)) |>
ggplot(aes(x=year, y=n))+
geom_bar(stat="identity")
serena <- data |>
filter(answer == 'SERENA')|>
group_by(year) |>
tally()
serena |>
mutate(year = as.numeric(year)) |>
ggplot(aes(x=year, y=n))+
geom_bar(stat="identity")
working <- data |>
filter(answer == 'SERENA')
View(serena)
View(working)
working <- data |>
filter(answer == 'NADAL')
serena <- data |>
filter(answer == 'BRADY')|>
group_by(year) |>
tally()
serena |>
mutate(year = as.numeric(year)) |>
ggplot(aes(x=year, y=n))+
geom_bar(stat="identity")
serena <- data |>
filter(answer == 'SERENA')|>
group_by(year) |>
tally()
serena |>
mutate(year = as.numeric(year)) |>
ggplot(aes(x=year, y=n))+
geom_bar(stat="identity")
working <- data |>
filter(answer == 'SERENA')
View(working)
working <- data |>
filter(answer == 'VENUS')
working <- data |>
filter(answer == 'VENUS')
working <- data |>
filter(answer == 'SERENA')
working <- data |>
filter(answer == 'ONO')
working <- data |>
filter(answer == 'SERENA')
serena <- data |>
filter(answer == 'SERENA')|>
group_by(year) |>
tally()
serena |>
mutate(year = as.numeric(year)) |>
ggplot(aes(x=year, y=n))+
geom_bar(stat="identity")
working <- data |>
filter(answer == 'SERENA')
write_csv(working, 'serena.csv')
